# Generated by Django 3.1.13 on 2021-11-22 06:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achieve_name', models.CharField(max_length=128, verbose_name='achievement name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='achive description')),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
            },
        ),
        migrations.CreateModel(
            name='GamificationInterface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achieves', models.ManyToManyField(to='gamification.Achievement', verbose_name='acquired achieves')),
            ],
        ),
        migrations.CreateModel(
            name='LevelDefinition',
            fields=[
                ('level_phase', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='level phase')),
                ('level_name', models.CharField(max_length=255, unique=True, verbose_name='level name')),
                ('level_exp', models.BigIntegerField(verbose_name='level exp')),
                ('total_exp', models.BigIntegerField(blank=True, null=True, verbose_name='total exp')),
            ],
            options={
                'ordering': ['level_phase'],
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_exp', models.BigIntegerField(blank=True, null=True, verbose_name='reward exp')),
                ('phrase', models.CharField(max_length=1023, verbose_name='reward phrase')),
            ],
            options={
                'verbose_name': 'Reward',
                'verbose_name_plural': 'Rewards',
            },
        ),
        migrations.CreateModel(
            name='Trophy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trophy_name', models.CharField(max_length=255, verbose_name='trophy name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='trophy description')),
                ('next_trophy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gamification.trophy', verbose_name='next trophy')),
            ],
            options={
                'verbose_name': 'Trophy',
                'verbose_name_plural': 'Trophies',
            },
        ),
        migrations.CreateModel(
            name='ShowCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_acquired', models.BooleanField(default=False, verbose_name='trophy acquired')),
                ('date_acquired', models.DateTimeField(auto_now=True, verbose_name='last acquired date')),
                ('game_interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.gamificationinterface')),
                ('trophy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.trophy')),
            ],
        ),
        migrations.CreateModel(
            name='Guild',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guild_name', models.CharField(max_length=255, verbose_name='guild name')),
                ('guild_description', models.TextField(default='no descriptions.', verbose_name='guild description')),
                ('guild_anniversary', models.DateField(auto_now_add=True, verbose_name='guild anniversary')),
                ('guild_simbol', models.ImageField(blank=True, null=True, upload_to=None, verbose_name='guild simbol')),
                ('guild_master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='guild master')),
            ],
            options={
                'verbose_name': 'Guild',
                'verbose_name_plural': 'Guilds',
            },
        ),
        migrations.CreateModel(
            name='GoalCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=255, unique=True, verbose_name='category')),
                ('next_goal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gamification.goalcategory', verbose_name='next goal')),
            ],
        ),
        migrations.AddField(
            model_name='gamificationinterface',
            name='guild',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='gamification.guild', verbose_name='joined_guild'),
        ),
        migrations.AddField(
            model_name='gamificationinterface',
            name='records',
            field=models.ManyToManyField(through='gamification.ShowCase', to='gamification.Trophy', verbose_name='trophy records'),
        ),
        migrations.CreateModel(
            name='ExpChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='exp amount')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='changed date')),
                ('interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.gamificationinterface', verbose_name='exp changed interface')),
            ],
        ),
    ]
